name:                quota
version:             0.1.0.0
synopsis:            Monad for tracking quota limits
description:
  /Why/
  .
  Sometimes you need to process untrusted inputs in a way which if done
  naively could consume unacceptably large amounts of resources. In this
  case, you need a way to track and limit the resource usage.
  .
  /What/
  .
  The core of the library is a type class, 'MonadQuota':
  .
  > class MonadQuota m where
  >     invoice :: Int -> m ()
  .
  ...and a monad transformer 'QuotaT', which implements MonadQuota on
  top of MonadThrow.
  .
  The QuotaT keeps track of a quota, calling @throwM QuotaError@ if it is
  expended. 'invoice' deducts its argument from the quota.
  .
  This was originally developed for use with the
  <https://github.com/zenhack/haskell-capnp capnp>, package, which
  needs to deal with inputs where naive traversal could cause a DoS
  vulnerability.
homepage:            https://github.com/zenhack/haskell-quota
license:             Apache-2.0
license-file:        LICENSE
author:              Ian Denhardt
maintainer:          ian@zenhack.net
-- copyright:
category:            Control
build-type:          Simple
extra-source-files:  ChangeLog.md
cabal-version:       >=1.10

library
  exposed-modules:
    Control.Monad.Quota
  build-depends:
    base >=4.9 && <5.0,
    exceptions >=0.8 && <0.9,
    mtl >=2.2 && <2.3,
    transformers >=0.5 && <0.6
  hs-source-dirs: src
  default-language:    Haskell2010

test-suite the-testsuite
  type: exitcode-stdio-1.0
  main-is: TestMain.hs
  build-depends:
    base >=4.9 && <5.0,
    exceptions >=0.8 && <0.9,
    mtl >=2.2 && <2.3,
    transformers >=0.5 && <0.6,
    test-framework >=0.8.1.1 && <0.9,
    test-framework-quickcheck2,
    QuickCheck,
    quota
  hs-source-dirs: tests
  default-language:    Haskell2010
